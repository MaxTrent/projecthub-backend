generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String
  role      UserRole @default(student)
  createdAt DateTime @default(now())

  projects  Project[] @relation("StudentProjects")
  supervisedProjects Project[] @relation("SupervisorProjects")
  feedback  Feedback[]
}

model Project {
  id             Int           @id @default(autoincrement())
  title          String
  abstract       String
  keywords       String
  student        User          @relation("StudentProjects", fields: [studentId], references: [id], onDelete: Cascade)
  studentId      Int
  supervisor     User?         @relation("SupervisorProjects", fields: [supervisorId], references: [id], onDelete: SetNull)
  supervisorId   Int?
  status         ProjectStatus @default(draft)
  fileUrl        String?
  createdAt      DateTime      @default(now())

  feedback       Feedback[]
  statusUpdates  StatusUpdate[]
}

model Feedback {
  id           Int      @id @default(autoincrement())
  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId    Int
  supervisor   User?    @relation(fields: [supervisorId], references: [id], onDelete: SetNull)
  supervisorId Int?
  comments     String
  createdAt    DateTime @default(now())
}

model StatusUpdate {
  id        Int           @id @default(autoincrement())
  project   Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
  status    ProjectStatus
  comments  String?
  updatedAt DateTime @default(now())
}

model Setting {
  id          Int    @id @default(autoincrement())
  maxFileSize Int    @default(50)
  defaultRole String @default("student") // No need for an enum here
}

enum UserRole {
  student
  supervisor
  admin
}

enum ProjectStatus {
  draft
  submitted
  under_review
  approved
}